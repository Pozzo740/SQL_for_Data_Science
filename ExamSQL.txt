Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	

2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review = 9581 (using foreign key user_id); 8090 (using foreign key business_id).
vi. Checkin = 493
vii. Photo = 6493 (using foreign key business_id).
viii. Tip = 3979 (using foreign key business_id); 537 (using foreign key user_id).
ix. User = 10000
x. Friend = 11
xi. Elite_years = 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	


3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: no.
	
	
	SQL code used to arrive at answer:

SELECT
COUNT(*) AS NumNulls
FROM user
WHERE id IS NULL OR
name IS NULL OR
review_count IS NULL OR
yelping_since IS NULL OR
useful IS NULL OR
funny IS NULL OR
cool IS NULL OR
fans IS NULL OR
average_stars IS NULL OR
compliment_hot IS NULL OR
compliment_more IS NULL OR
compliment_profile IS NULL OR
compliment_cute IS NULL OR
compliment_list IS NULL OR
compliment_note IS NULL OR
compliment_plain IS NULL OR
compliment_cool IS NULL OR
compliment_funny IS NULL OR
compliment_writer IS NULL OR
compliment_photos IS NULL
	
	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:	1	max:	5	avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:	1.0	max:	5.0	avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:	0	max:	2	avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:	1	max:	53	avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:	0	max:	2000 avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:

SELECT
city,
SUM(review_count) AS count
FROM business
GROUP BY city
ORDER BY count DESC
	
	
	Copy and Paste the Result Below:

+-----------------+-------+
| city            | count |
+-----------------+-------+
| Las Vegas       | 82854 |
| Phoenix         | 34503 |
| Toronto         | 24113 |
| Scottsdale      | 20614 |
| Charlotte       | 12523 |
| Henderson       | 10871 |
| Tempe           | 10504 |
| Pittsburgh      |  9798 |
| Montréal        |  9448 |
| Chandler        |  8112 |
| Mesa            |  6875 |
| Gilbert         |  6380 |
| Cleveland       |  5593 |
| Madison         |  5265 |
| Glendale        |  4406 |
| Mississauga     |  3814 |
| Edinburgh       |  2792 |
| Peoria          |  2624 |
| North Las Vegas |  2438 |
| Markham         |  2352 |
| Champaign       |  2029 |
| Stuttgart       |  1849 |
| Surprise        |  1520 |
| Lakewood        |  1465 |
| Goodyear        |  1155 |
+-----------------+-------+
(Output limit exceeded, 25 of 362 total rows shown)
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

SELECT
stars,
COUNT(stars) as count
FROM business
WHERE city = 'Avon'
GROUP BY stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

+-------+-------+
| stars | count |
+-------+-------+
|   1.5 |     1 |
|   2.5 |     2 |
|   3.5 |     3 |
|   4.0 |     2 |
|   4.5 |     1 |
|   5.0 |     1 |
+-------+-------+


ii. Beachwood

SQL code used to arrive at answer:

SELECT
stars,
SUM(review_count) AS SumReview
FROM business
WHERE city = 'Beachwood'
GROUP BY stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

+-------+-----------+
| stars | SumReview |
+-------+-----------+
|   2.0 |         8 |
|   2.5 |         3 |
|   3.0 |        11 |
|   3.5 |         6 |
|   4.0 |        69 |
|   4.5 |        17 |
|   5.0 |        23 |
+-------+-----------+
		

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:

SELECT
id,
name,
review_count
FROM user
ORDER BY review_count DESC
LIMIT 3
	
		
	Copy and Paste the Result Below:

+------------------------+--------+--------------+
| id                     | name   | review_count |
+------------------------+--------+--------------+
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald |         2000 |
| -3s52C4zL_DHRK0ULG6qtg | Sara   |         1629 |
| -8lbUNlXVSoXqaRRiHiSNg | Yuri   |         1339 |
+------------------------+--------+--------------+
		

8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:

The SQL code I did use is:

SELECT
id,
SUM(review_count) AS reviews,
fans
FROM user
GROUP BY fans, id
ORDER BY reviews DESC;

SELECT
id,
SUM(fans) AS fans,
review_count
FROM user
GROUP BY review_count, id
ORDER BY fans DESC

And my results were this:

+------------------------+---------+------+
| id                     | reviews | fans |
+------------------------+---------+------+
| -G7Zkl1wIWBBmD0KRy_sCw |    2000 |  253 |
| -3s52C4zL_DHRK0ULG6qtg |    1629 |   50 |
| -8lbUNlXVSoXqaRRiHiSNg |    1339 |   76 |
| -K2Tcgh2EKX6e6HqqIrBIQ |    1246 |  101 |
| -FZBTkAZEXoP7CYvRV2ZwQ |    1215 |  126 |
| --2vR0DIsmQ6WfcSzKWigw |    1153 |  311 |
| -gokwePdbXjfS0iF7NsUGA |    1116 |   16 |
| -DFCC64NXgqrxlO8aLU5rg |    1039 |  104 |
| -8EnCioUmDygAbsYZmTeRQ |     968 |  497 |
| -0IiMAZI2SsQ7VmyzJjokQ |     930 |  173 |
| -fUARDNuXAfrOn4WLSZLgA |     904 |   38 |
| -hKniZN2OdshWLHYuj21jQ |     864 |   43 |
| -9da1xk7zgnnfO1uTVYGkA |     862 |  124 |
| -B-QEUESGWHPE_889WJaeg |     861 |  115 |
| -kLVfaJytOJY2-QdQoCcNQ |     842 |   85 |
| -kO6984fXByyZm3_6z2JYg |     836 |   37 |
| -lh59ko3dxChBSZ9U7LfUw |     834 |  120 |
| -g3XIcCb2b-BD0QBCcq2Sw |     813 |  159 |
| -l9giG8TSDBG1jnUBUXp5w |     775 |   61 |
| -dw8f7FLaUmWR7bfJ_Yf0w |     754 |   78 |
| -AaBjWJYiQxXkCMDlXfPGw |     702 |   35 |
| -jt1ACMiZljnBFvS6RRvnA |     696 |   10 |
| -IgKkE8JvYNWeGu8ze4P8Q |     694 |  101 |
| -hxUwfo3cMnLTv-CAaP69A |     676 |   25 |
| -H6cTbVxeIRYR-atxdielQ |     675 |   45 |
+------------------------+---------+------+
(Output limit exceeded, 25 of 10000 total rows shown)

+------------------------+------+--------------+
| id                     | fans | review_count |
+------------------------+------+--------------+
| -9I98YbNQnLdAmcYfb324Q |  503 |          609 |
| -8EnCioUmDygAbsYZmTeRQ |  497 |          968 |
| --2vR0DIsmQ6WfcSzKWigw |  311 |         1153 |
| -G7Zkl1wIWBBmD0KRy_sCw |  253 |         2000 |
| -0IiMAZI2SsQ7VmyzJjokQ |  173 |          930 |
| -g3XIcCb2b-BD0QBCcq2Sw |  159 |          813 |
| -9bbDysuiWeo2VShFJJtcw |  133 |          377 |
| -FZBTkAZEXoP7CYvRV2ZwQ |  126 |         1215 |
| -9da1xk7zgnnfO1uTVYGkA |  124 |          862 |
| -lh59ko3dxChBSZ9U7LfUw |  120 |          834 |
| -B-QEUESGWHPE_889WJaeg |  115 |          861 |
| -DmqnhW4Omr3YhmnigaqHg |  111 |          408 |
| -cv9PPT7IHux7XUc9dOpkg |  105 |          255 |
| -DFCC64NXgqrxlO8aLU5rg |  104 |         1039 |
| -IgKkE8JvYNWeGu8ze4P8Q |  101 |          694 |
| -K2Tcgh2EKX6e6HqqIrBIQ |  101 |         1246 |
| -4viTt9UC44lWCFJwleMNQ |   96 |          307 |
| -3i9bhfvrM3F1wsC9XIB8g |   89 |          584 |
| -kLVfaJytOJY2-QdQoCcNQ |   85 |          842 |
| -ePh4Prox7ZXnEBNGKyUEA |   84 |          220 |
| -4BEUkLvHQntN6qPfKJP2w |   81 |          408 |
| -C-l8EHSLXtZZVfUAUhsPA |   80 |          178 |
| -dw8f7FLaUmWR7bfJ_Yf0w |   78 |          754 |
| -8lbUNlXVSoXqaRRiHiSNg |   76 |         1339 |
| -KFjONqNDuBfKDeKAoA-bg |   73 |          160 |
+------------------------+------+--------------+
(Output limit exceeded, 25 of 10000 total rows shown)

INTERPRETATION: We can see that in neither of the tables above a correlation between fans and reviews exists. Of course, we have to consider that the sample is quite poor but because both the fact that the tables are ordered in descendent order by reviews and fans, respectively, and that the records in the second column in both of the tables is very sparse we can conclude with certain degree of confidence that either there’s no correlation or it is very low.
	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: love

	
	SQL code used to arrive at answer:

SELECT
COUNT(text) AS love_reviews
FROM review
WHERE text LIKE '%love%'

SELECT
COUNT(text) AS hate_reviews
FROM review
WHERE text LIKE '%hate%'

+--------------+
| love_reviews |
+--------------+
|         1780 |
+--------------+

+--------------+
| hate_reviews |
+--------------+
|          232 |
+--------------+
	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:

SELECT
id,
name,
SUM(fans) AS NumFans
FROM user
GROUP BY id, name
ORDER BY NumFans DESC
LIMIT 10;
	
	
	Copy and Paste the Result Below:

+------------------------+-----------+---------+
| id                     | name      | NumFans |
+------------------------+-----------+---------+
| -9I98YbNQnLdAmcYfb324Q | Amy       |     503 |
| -8EnCioUmDygAbsYZmTeRQ | Mimi      |     497 |
| --2vR0DIsmQ6WfcSzKWigw | Harald    |     311 |
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |     253 |
| -0IiMAZI2SsQ7VmyzJjokQ | Christine |     173 |
| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |     159 |
| -9bbDysuiWeo2VShFJJtcw | Cat       |     133 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William   |     126 |
| -9da1xk7zgnnfO1uTVYGkA | Fran      |     124 |
| -lh59ko3dxChBSZ9U7LfUw | Lissa     |     120 |
+------------------------+-----------+---------+

	
		
Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?
   Yes.

ii. Do the two groups you chose to analyze have a different number of reviews?
    Yes.
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
     There are no commonalities between the location data of businesses, neither in the same group nor in different groups. So, is not possible to infer something from the location data.

SQL code used for analysis:

SELECT
category.category,
business.city,
business.stars,
hours.hours,
SUM(business.review_count) AS reviews,
business.neighborhood || ', ' || business.address  || ', ' || business.city || ', ' || business.state || ', ' || business.postal_code AS location,
CASE
WHEN business.stars BETWEEN 2 AND 3 THEN '2-3'
WHEN business.stars BETWEEN 4 AND 5 THEN '4-5'
ELSE 'Other'
END StarsGroup
FROM business
INNER JOIN category ON business.id = category.business_id
INNER JOIN hours ON business.id = hours.business_id
WHERE business.city = 'Toronto' AND category.category = 'Food' AND
((business.stars BETWEEN 2 AND 3) OR (business.stars BETWEEN 4 AND 5))
GROUP BY business.stars

+----------+---------+-------+----------------------+---------+-----------------------------------------------------------+------------+
| category | city    | stars | hours                | reviews | location                                                  | StarsGroup |
+----------+---------+-------+----------------------+---------+-----------------------------------------------------------+------------+
| Food     | Toronto |   2.5 | Saturday|8:00-22:00  |      70 | Roncesvalles, 2280 Dundas Street W, Toronto, ON, M6R 1X3  | 2-3        |
| Food     | Toronto |   4.0 | Saturday|11:00-21:00 |      90 | Wallace Emerson, 247 Wallace Avenue, Toronto, ON, M6H 1V5 | 4-5        |
| Food     | Toronto |   4.5 | Saturday|16:00-2:00  |     182 | High Park, 1669 Bloor Street W, Toronto, ON, M6P 1A6      | 4-5        |
+----------+---------+-------+----------------------+---------+-----------------------------------------------------------+------------+

		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1: The average of the review_count is much higher for those businesses still opened than for those which aren’t.
         
         
ii. Difference 2: The most frequent category in those businesses still opened is Restaurants whereas in those already closed is Hotels & Travel.
         
         
         
SQL code used for analysis:

i.
SELECT
AVG(review_count) AS AverageReview,
CASE
WHEN is_open = 1 THEN ‘Open'
WHEN is_open = 0 THEN ‘Closed'
END OpenClosed
FROM business
GROUP BY is_open

ii.
SELECT
category AS Most_Common_Category,
CASE
WHEN is_open = 1 THEN 'Open'
WHEN is_open = 0 THEN 'Closed'
END OpenClosed
FROM category INNER JOIN business ON category.business_id = business.id
GROUP BY category
HAVING COUNT(*) = (
                   SELECT MAX(Cnt) 
                   FROM(
                         SELECT COUNT(*) as Cnt
                         FROM category INNER JOIN business ON category.business_id = business.id
                         GROUP BY category
                         HAVING business.is_open = 1
                        ) tmp
                    )
                    AND business.is_open = 1
                    
UNION

SELECT
category AS Most_Common_Category,
CASE
WHEN is_open = 1 THEN 'Open'
WHEN is_open = 0 THEN 'Closed'
END OpenClosed
FROM category INNER JOIN business ON category.business_id = business.id
GROUP BY category
HAVING COUNT(*) = (
                   SELECT MAX(Cnt) 
                   FROM(
                         SELECT COUNT(*) as Cnt
                         FROM category INNER JOIN business ON category.business_id = business.id
                         GROUP BY category
                         HAVING business.is_open = 0
                        ) tmp
                    )
                    AND business.is_open = 0
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
I’m going to prepare data intended to build a Utility Matrix for a Recommendation System.
         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
The data needed for the analysis is: the businesses names, the id of the users and the ratings (stars) they gave to the businesses in which they have consumed.

The Utility Matrix is built with rows consisting of users (which is why we requested the Ids) and columns consisting of businesses (which is why we requested the businesses names). We grouped the data by user_id so in each user’s row will appear all the businesses he/she rated. If we denote this matrix as ‘A’, then the Aij entry of the matrix is the rating, or star, that the user ‘i’ gave to the business ‘j’ (which is why we requested the stars that users gave to businesses).
                           
                  
iii. Output of your finished dataset:

Yelp Dataset SQL Lookup
Use the area below to run your queries against the Yelp dataset and fill out your worksheet (available in the Peer Review instructions):

+-----------------------------------+------------------------+-------+
| BusinessName                      | UserId                 | stars |
+-----------------------------------+------------------------+-------+
| Fire Station Dog Park             | -BevLRnJhh9JeIT2g5I3mQ |     5 |
| Luv It Frozen Custard             | -RjJfXz8_qrk1Hyqd-gyaA |     5 |
| Stownut Donut & Diner             | -vSUDEQB9j2DaP8_4dGW7A |     5 |
| Maggiano's Little Italy           | 0CHvd3MjLJtRwCS2H4plcg |     5 |
| Dierks Bentley's Whiskey Row      | 0DLZUVxfISePszJ9rpcJkA |     5 |
| Cholla Prime Steakhouse & Lounge  | 0H50qxdwgVYNROTBA3OQLw |     5 |
| Vito's Pizza & Italian Ristorante | 0ZhHtELVQlbRgDrKk1lQHA |     5 |
| Kimberfire                        | 0tpJmUYvbQSRbNa6DI0WVA |     5 |
| Freiburg Gastropub                | 10Baf7gAkJoBQW1-R-kAyg |     5 |
| Grant Bar                         | 1kkwjklp5UBCWaMyntgTgA |     5 |
| Switch Restaurant & Wine Bar      | 24AzZDQKHySwMQR7VQVCAg |     5 |
| The Perfect Scoop & Boba Tea      | 2sf4bEzsFh0dRpxCpPQcMw |     5 |
| Club Pilates Chandler             | 2yOofTV0u8fruuMtTSVJpg |     5 |
| Classique Massage                 | 3-hGkc5cIXU7PPACZxP_9g |     5 |
| West Wing Cigar Lounge            | 3yNnJfdh2SZPfJJvgTLX8A |     5 |
| Ed's Tavern                       | 3zG60_M_TaPMNB6uIMn5jQ |     5 |
| lather A Pet Bath House           | 4b5lJxSzvaVBEAP-Oqe-Lg |     5 |
| DESTIHL Restaurant & Brew Works   | 4bQ37HTTwTGoSAmB5eu38g |     5 |
| Pam's Caribbean Kitchen           | 4cBTUgitY98C-y8rW1-crw |     5 |
| Hayden Butte Preserve             | 4nk5Wn4ElB2oanaKscQ8pQ |     5 |
| Diablo's Cantina                  | 5XLMNvRNDL4Iq5qXKl97aQ |     5 |
| Go!ku                             | 5xEDNW4Pzh6J9D9ecAn0JA |     5 |
| Map of Thailand                   | 6B-shn9YKk9KO9RniUUz2g |     5 |
| The Juice Standard                | 6HfTcNCiPxviJQabNI4ceQ |     5 |
| Vintage Pools                     | 6rrfyzggj2J1SIjnYSFrWw |     5 |
+-----------------------------------+------------------------+-------+
(Output limit exceeded, 25 of 635 total rows shown)
         
         
iv. Provide the SQL code you used to create your final dataset:

SELECT
business.name AS BusinessName,
review.user_id AS UserId,
review.stars
FROM business
INNER JOIN review ON business.id = review.business_id
GROUP BY review.user_id
ORDER BY review.stars DESC